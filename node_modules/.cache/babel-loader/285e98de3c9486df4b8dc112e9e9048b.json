{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/GitHub/my-app/src/App/RadomColor.js\";\nimport React, { useEffect } from 'react';\nimport * as R from 'ramda';\n\nfunction RadomColor({\n  isRadomPage\n}) {\n  // const init = () => {\n  //     //顏色字串\n  //     let colorStr=''\n  //     function color () { \n  //         const r = function () { return Math.floor(Math.random()*256) }\n  //         return colorStr = 'rgb(' + r() +',' + r() +',' + r() +')'\n  //     }\n  //     const Height = window.screen.height * 0.8\n  //     const Width = window.screen.width\n  //     const ulHeight = (Height - 110 )/8\n  //     const ulWidth = Width * 0.9\n  //     const liWidth = (ulWidth * 0.9)/8\n  //     //ul\n  //       for (let i=1;i<9;i++) { \n  //           const ul = document.createElement('ul')\n  //           document.querySelector('.RadomColor').appendChild(ul).style.width = ulWidth + 'px'      \n  //       }\n  //     //li \n  //       for (let j=0;j<8;j++) {\n  //           var x = document.querySelector('.RadomColor').querySelectorAll('ul');\n  //           for (let k=0;k<x.length;k++) {\n  //               let li = document.createElement('li')\n  //               color()\n  //               document.querySelector('.RadomColor').querySelectorAll('ul')[k].appendChild(li).style.height = ulHeight + 'px' \n  //               document.querySelector('.RadomColor').querySelectorAll('ul')[k].appendChild(li).style.width = liWidth + 'px' \n  //               document.querySelector('.RadomColor').querySelectorAll('ul')[k].appendChild(li).style.backgroundColor=colorStr\n  //           }\n  //       }\n  //     //click \n  //       document.querySelector('.RadomColor').addEventListener ('click', function(event) {\n  //           var targetElement = event.srcElement.localName\n  //           if (targetElement === 'li') {\n  //               color()\n  //               event.srcElement.style.backgroundColor = colorStr\n  //           }\n  //       })\n  //   }\n  const init = () => {\n    const hasData = R.compose(R.not, R.either(R.isNil, R.isEmpty));\n    const BOX_NUMBER = 64;\n    let colorStr;\n\n    function color() {\n      const r = function () {\n        return Math.floor(Math.random() * 256);\n      };\n\n      return colorStr = `rgb(${r()},${r()},${r()})`;\n    }\n\n    let data = [];\n\n    for (let i = 0; i < BOX_NUMBER; i++) {\n      color();\n      const item = {};\n      item['id'] = i;\n      item['color'] = colorStr;\n      item['onClick'] = false;\n      data.push(item);\n    }\n\n    const changeColor = id => {\n      let oldColor = data[id].color; // \n      // oldColor = newColor\n      // this.color = colorStr\n\n      data[id].onClick = true;\n      color();\n      data[id].color = colorStr;\n      console.log(id, oldColor, colorStr);\n    };\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"RadomColor\",\n    style: {\n      display: isRadomPage ? 'flex' : 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, hasData(data) && data.map(item => React.createElement(\"div\", {\n    className: \"radomDiv\",\n    key: item.id,\n    id: item.id,\n    style: {\n      backgroundColor: item.onClick ? colorStr : item.color\n    },\n    onClick: () => {\n      changeColor(item.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n}\n\nexport default RadomColor;","map":{"version":3,"sources":["/Users/apple/Documents/GitHub/my-app/src/App/RadomColor.js"],"names":["React","useEffect","R","RadomColor","isRadomPage","init","hasData","compose","not","either","isNil","isEmpty","BOX_NUMBER","colorStr","color","r","Math","floor","random","data","i","item","push","changeColor","id","oldColor","onClick","console","log","display","map","backgroundColor"],"mappings":"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","sourcesContent":["import React ,{ useEffect }from 'react'\nimport * as R from 'ramda'\n\nfunction RadomColor({ isRadomPage }){\n    // const init = () => {\n    //     //顏色字串\n    //     let colorStr=''\n    //     function color () { \n    //         const r = function () { return Math.floor(Math.random()*256) }\n    //         return colorStr = 'rgb(' + r() +',' + r() +',' + r() +')'\n    //     }\n    //     const Height = window.screen.height * 0.8\n    //     const Width = window.screen.width\n    //     const ulHeight = (Height - 110 )/8\n    //     const ulWidth = Width * 0.9\n    //     const liWidth = (ulWidth * 0.9)/8\n    //     //ul\n    //       for (let i=1;i<9;i++) { \n    //           const ul = document.createElement('ul')\n    //           document.querySelector('.RadomColor').appendChild(ul).style.width = ulWidth + 'px'      \n    //       }\n    //     //li \n    //       for (let j=0;j<8;j++) {\n    \n    //           var x = document.querySelector('.RadomColor').querySelectorAll('ul');\n    //           for (let k=0;k<x.length;k++) {\n    //               let li = document.createElement('li')\n    //               color()\n    //               document.querySelector('.RadomColor').querySelectorAll('ul')[k].appendChild(li).style.height = ulHeight + 'px' \n    //               document.querySelector('.RadomColor').querySelectorAll('ul')[k].appendChild(li).style.width = liWidth + 'px' \n    //               document.querySelector('.RadomColor').querySelectorAll('ul')[k].appendChild(li).style.backgroundColor=colorStr\n    //           }\n    //       }\n          \n          \n    //     //click \n    //       document.querySelector('.RadomColor').addEventListener ('click', function(event) {\n    //           var targetElement = event.srcElement.localName\n    \n    //           if (targetElement === 'li') {\n    //               color()\n    //               event.srcElement.style.backgroundColor = colorStr\n    //           }\n    //       })\n    //   }\n      \n      const init = () => {\n\n     \n\n      const hasData = R.compose(\n        R.not,\n        R.either(R.isNil, R.isEmpty)\n      ) \n      \n      const BOX_NUMBER = 64\n\n      let colorStr\n      function color () { \n          const r = function () { return Math.floor(Math.random()*256) }\n          return colorStr = `rgb(${r()},${r()},${r()})`\n      }\n\n      let data = []\n      for(let i = 0; i < BOX_NUMBER; i ++) {\n        color()\n        const item = {}\n        item['id'] = i\n        item['color'] = colorStr\n        item['onClick'] = false\n        data.push(item)\n      }\n\n    \n      const changeColor = id => {\n        let oldColor = data[id].color\n        // \n        // oldColor = newColor\n        // this.color = colorStr\n        data[id].onClick = true\n        color()\n        data[id].color = colorStr\n        console.log(id, oldColor,colorStr)\n      }\n     \n    }\n      useEffect(()=>{\n        init()\n      },[])\n      return (\n        \n          <div className='RadomColor' style={{display: isRadomPage ? 'flex' : 'none'}}>\n            {hasData(data) && data.map(item => (\n                <div\n                  className = \"radomDiv\"\n                  key = {item.id}\n                  id = {item.id}\n                  style = {{backgroundColor: item.onClick ? colorStr : item.color }}\n                  onClick = {() => {\n                    changeColor(item.id)\n                  }}\n                />\n            ))}\n          </div>\n      \n      )\n}\n\nexport default RadomColor"]},"metadata":{},"sourceType":"module"}