{"version":3,"sources":["App/RadomColor.js","App/SameColor.js","App/App.js","index.js"],"names":["RadomColor","isRadomPage","hasData","R","box","useState","data","setData","fetchColor","r","Math","floor","random","useMemo","i","item","id","color","push","init","className","style","display","map","key","backgroundColor","onClick","components","slice","splice","err","window","alert","message","changeColor","SameColor","isSamePage","useEffect","colorStr","ulHeight","screen","height","liWidth","width","DIV","document","createElement","querySelector","appendChild","setAttribute","colorArray","liNumber","querySelectorAll","length","l","arr","result","ran","myFunction","String","getElementById","j","num","firstColor","secondColor","firstElement","secondElement","firstElementId","secondElementId","time","score","addEventListener","event","srcElement","WebkitTransition","opacity","App","setIsSamePage","setIsRadomPage","ReactDOM","render"],"mappings":"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","file":"static/js/main.6423cbef.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport * as R from 'ramda'\n\nfunction RadomColor({ isRadomPage }){\n  const hasData = R.compose(\n    R.not,\n    R.either(R.isNil, R.isEmpty)\n  )\n  \n  const BOX_NUMBER = 64\n  let box = []\n  const [data,setData] = useState(box)\n  \n  function fetchColor () { \n    const r = () => Math.floor(Math.random()*256)\n    return `rgb(${r()},${r()},${r()})`\n  }\n\n  const init = () => {\n    for(let i = 0; i < BOX_NUMBER; i ++) {\n      const item = {\n        id: i,\n        color: fetchColor()\n      }\n      box.push(item)\n    }\n    setData(box)\n  }\n\n  useMemo(() => {\n    init()\n  },[])\n\n  const changeColor = (id) => {\n    try {\n      const item = {\n        'id': id,\n        'color': fetchColor()\n      }\n      const components = data.slice(0)\n      components.splice(id,1,item)\n      setData(components)\n    } catch (err) {\n      window.alert(err.message)\n    }\n  }\n\n  return (\n      <div className = 'RadomColor' style = {{display: isRadomPage ? 'flex' : 'none'}}>\n        {hasData(data) && data.map(item => (\n          <div\n            className = \"radomDiv\"\n            key = {item.id}\n            id = {item.id}\n            style = {{backgroundColor: item.color}}\n            onClick = {() => {\n              changeColor(item.id)\n            }}\n          />\n        ))}\n      </div>\n  )\n}\n\nexport default RadomColor","import React ,{ useEffect }from 'react'\n\nfunction SameColor({ isSamePage }){\n    const init = () => {\n        //顏色字串\n        let colorStr=''\n        function color () { \n            const r = function () { return Math.floor(Math.random()*256) }\n            return colorStr = 'rgb(' + r() +',' + r() +',' + r() +')'\n        }\n        \n        const Height = window.screen.height * 0.8\n        const Width = window.screen.width\n        const ulHeight = (Height - 110 )/8\n        const ulWidth = Width * 0.9\n        const liWidth = (ulWidth * 0.9)/8\n        \n        for (let i=1;i<65;i++) {\n          const DIV = document.createElement(\"div\")\n          document.querySelector('.SameColor').appendChild(DIV).setAttribute(\"id\",i)\n          document.querySelector('.SameColor').appendChild(DIV).style.height = ulHeight + 'px'\n          document.querySelector('.SameColor').appendChild(DIV).style.width = liWidth + 'px' \n        }\n\n        //color Array\n        let colorArray =[]\n        const liNumber = document.querySelectorAll('div').length\n        for (let l=0;l<liNumber/2;l++) {\n          color();\n          colorArray.push(colorStr)\n        }\n       \n        const arr = []\n        for (let i = 0; i < 64; i++) {\n            arr[i] = i\n        }\n        let result = []\n\n      function myFunction() {\n\n        const ranNum = 64\n        for (let i = 0; i < ranNum; i++) {\n        const ran = Math.floor(Math.random() * arr.length)\n        result.push(arr.splice(ran, 1)[0])\n        }\n      }\n      myFunction()\n\n      for (let i = 0; i<=31;i++) {\n      let num = i+1\n        let id = String(num)\n        document.getElementById(id).style.backgroundColor = colorArray[i]\n      }\n       \n      for (let j = 32; j <= 63; j++) {\n          let num = j-32\n          let id = String(j+1)\n          document.getElementById(id).style.backgroundColor = colorArray[num]\n      }\n      \n       //click \n      let time = 0\n      let score = 0\n      let firstColor, secondColor, firstElement, secondElement, firstElementId, secondElementId\n       document.querySelector('.SameColor').addEventListener ('click', function(event) {\n        time++\n        if (time % 2 === 1) {\n          firstColor = event.srcElement.style.backgroundColor\n          firstElement = event.srcElement\n          firstElementId =  event.srcElement.id\n        } else { \n          secondColor = event.srcElement.style.backgroundColor\n          secondElement = event.srcElement\n          secondElementId =  event.srcElement.id\n        }\n        if(firstElementId === secondElementId){\n          time = 0\n        }else{\n          if (firstColor === secondColor) {\n            time = 0\n            score++\n            alert('Good Job! Score: ' + score)\n            firstElement.style.WebkitTransition = 'opacity 1s'\n            secondElement.style.WebkitTransition = 'opacity 1s'\n            firstElement.style.opacity = 0\n            secondElement.style.opacity = 0\n          }\n        }\n    }) \n        \n      }\n      \n      useEffect(()=>{\n        init()\n      },[])\n      return (\n        <div className='SameColor' style={{display: isSamePage ? 'flex' : 'none'}}></div>\n      );\n}\n\nexport default SameColor","import React, { useState } from 'react'\nimport RadomColor from './RadomColor'\nimport SameColor from './SameColor'\nimport './App.css'\n\nfunction App() {\n  const [isSamePage,setIsSamePage] = useState(false)\n  const [isRadomPage,setIsRadomPage] = useState(true)\n  \n  const sameColor = () => {\n    setIsSamePage(true)\n    setIsRadomPage(false)\n  }\n  const radomColor = () => {\n    setIsRadomPage(true)\n    setIsSamePage(false)\n  }\n  \n  return (\n    <div className='main'>\n        <div className='title'>\n            <h1>功能選單</h1>\n            <p>\n                <span onClick={radomColor}>點擊區塊變色</span>\n                <span onClick={sameColor}>點擊相同區塊</span>\n            </p>\n        </div>\n        <div className='contain'>\n          <SameColor\n            isSamePage={isSamePage}\n          />\n          <RadomColor\n            isRadomPage={isRadomPage}\n          />\n        </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}